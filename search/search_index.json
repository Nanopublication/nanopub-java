{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to <code>nanopub-java</code>\u2019s documentation!","text":""},{"location":"#overview","title":"Overview","text":"<p>The <code>nanopub-java</code> library is a Java-based library for nanopublications (see http://nanopub.net) based on RDF4J.</p> <p>Nanopublications are a formalized and machine-readable way of communicating the smallest possible units of publishable information. See the What are Nanopublications? page for more information.</p>"},{"location":"#license","title":"License","text":"<p><code>nanopub-java</code> is free software under the MIT License. See LICENSE for additional information.</p>"},{"location":"getting-started/setup/","title":"Setup instructions","text":"<p>The tool is released to Maven central as a Maven artifact and Docker image. There is also a CLI available.</p>"},{"location":"getting-started/setup/#install-from-maven-central","title":"Install from Maven Central","text":"MavenGradle (Kotlin)sbt <pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;org.nanopub&lt;/groupId&gt;\n    &lt;artifactId&gt;nanopub&lt;/artifactId&gt;\n    &lt;version&gt;1.77&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre> <pre><code>implementation(\"org.nanopub:nanopub:1.77\")\n</code></pre> <pre><code>libraryDependencies += \"org.nanopub\" % \"nanopub\" % \"1.77\"\n</code></pre> <p>If you use a package manager that is included in the proposed ones, check out Nanopub on Maven Central to know how to import the package into your application.</p>"},{"location":"getting-started/setup/#run-as-docker-image","title":"Run as Docker Image","text":"<p>An image is released on Docker Hub</p>"},{"location":"getting-started/setup/#run-through-the-unix-command-line-cli","title":"Run through the UNIX Command-Line (CLI)","text":"<p>To use this library on the command line, just download the np script. Make sure it is executable, and then you can invoke it with <code>./np</code> \u2026 (or simply <code>np</code> \u2026 if you make sure it\u2019s included in the PATH variable), for example:</p> <pre><code>./np check nanopubfile.trig\n</code></pre> <p>This automatically downloads the latest release as a jar file on the first run. You can also directly use the pre-built jar files:</p> <pre><code>java -jar nanopub-1.77-jar-with-dependencies.jar check nanopubfile.trig\n</code></pre> <p>Note: For Mac users, before running np ensure that the GNU version of <code>curl</code> is installed (not the default BSD versions), and are the ones being used when the <code>curl</code> command is invoked.</p>"},{"location":"getting-started/what-are-nanopubs/","title":"What are nanopublications?","text":"<p>Nanopublications are a formalized and machine-readable way of communicating the smallest possible units of publishable information. This could be, for example, the outcome of a scientific study or a claim made by a particular scientist.</p> <p>Nanopublications are searchable, citable, and contain authorship and attribution information. The aim is to encourage individual scientific results to be released in a traceable and interoperable format. As such, nanopublications are an effective FAIR means of communicating scientific claims and results.</p> <p></p> <p>As can be seen in this image, a nanopublication has three basic elements:</p> <ol> <li>Assertion: The assertion is the main content of a nanopublication in the form of a small atomic unit of information</li> <li>Provenance: This part describes how the assertion above came to be. This can include the scientific methods that were    used to generate the assertion, for example a reference to the kind of study that was performed and its parameters.</li> <li>Publication Info:  This part contains metadata about the nanopublication as a whole, such as when and by whom it was    created and the license terms for its reuse.</li> </ol>"},{"location":"quick-start/cli/","title":"UNIX Command-Line (CLI)","text":""},{"location":"quick-start/cli/#java-command-line-interface","title":"Java Command Line Interface","text":"<p>This is the documentation of the java cli of nanopub.java.</p>"},{"location":"quick-start/cli/#available-commands","title":"Available Commands","text":"<p>You can get the list of commands by typing:</p> <p><code>java -jar nanopub-&lt;version&gt;-jar-with-dependencies.jar</code></p> <p>In the following list you can see the short command first, followed by the classname implementing that command.</p> <ul> <li>check / CheckNanopub</li> <li>get / GetNanopub</li> <li>publish / PublishNanopub</li> <li>sign / SignNanopub</li> <li>mktrusty / MakeTrustyNanopub</li> <li>fix / FixTrustyNanopub</li> <li>status / NanopubStatus</li> <li>server / GetServerInfo</li> <li>mkindex / MakeIndex</li> <li>mkkeys / MakeKeys</li> <li>html / Nanopub2Html</li> <li>now / TimestampNow</li> <li>op / Run</li> <li>setting / ShowSetting</li> <li>query / RunQuery</li> <li>udtime / TimestampUpdater</li> <li>strip / StripDown</li> <li>shacl / ShaclValidator</li> <li>rocrate / RoCrateImporter</li> </ul> <p>Some commands are grouped as subcommands of the <code>op</code> command.</p> <ul> <li>filter / Filter</li> <li>extract / Extract</li> <li>gml / Gml</li> <li>fingerprint / Fingerprint</li> <li>topic / Topic</li> <li>reuse / Reuse</li> <li>count / Count</li> <li>decontext / Decontextualize</li> <li>union / Union</li> <li>ireuse / IndexReuse</li> <li>exportjson / ExportJson</li> <li>namespaces / Namespaces</li> <li>aggregate / Aggregate</li> <li>import / Import</li> <li>create / Create</li> <li>build / Build</li> <li>tar / Tar</li> </ul> <p>To get more information on the usage of a command just type it in. E.g.</p> <p><code>java -jar nanopub-&lt;version&gt;-jar-with-dependencies.jar check</code></p> <p>will output:</p> <pre><code>Usage: &lt;main class&gt; [options] input-nanopubs\n  Options:\n    -s\n      Load nanopubs from given SPARQL endpoint\n    -v\n      Verbose\n      Default: false\n</code></pre>"},{"location":"quick-start/cli/#keys-and-profile","title":"Keys and Profile","text":"<p>Some commands use the keys in <code>~/.nanopub/</code>. To generate the key pair use:</p> <p><code>java -jar nanopub-&lt;version&gt;-jar-with-dependencies.jar mkkeys</code></p> <p>The command <code>sign</code> takes a profile file in yaml format:</p>"},{"location":"quick-start/cli/#profileyaml","title":"profile.yaml","text":"<pre><code>orcid_id: https://orcid.org/0009-0008-3635-347X\npublic_key: /Users/name/.nanopub/id_rsa.pub\nprivate_key: /Users/name/.nanopub/id_rsa\n</code></pre>"},{"location":"quick-start/cli/#shacl-validation","title":"Shacl Validation","text":"<pre><code>Usage: java -jar nanopub.jar shacl [options]\n  Options:\n  * -n\n      nanopub-to-be-validated\n  * -s\n      SHACL shape file\n</code></pre> <p>The command takes two files in the .trig format, the nanopublication and the SHACL specification or shape file. This shape-file corresponds to the profile in handle-based FDOs. </p>"},{"location":"quick-start/java/","title":"Java","text":""},{"location":"quick-start/java/#create-a-nanopublication","title":"Create a Nanopublication","text":"<p>Prerequisite for creating/publishing</p> <p>To create and publish nanopublications, you need to first make sure you have a local keypair. To create such a keypair, run just once: <pre><code>MakeKeys.make(\"~/.nanopub/id\", SignatureAlgorithm.RSA);\n</code></pre></p> <pre><code>NanopubCreator npCreator = new NanopubCreator(true);\nfinal ValueFactory vf = SimpleValueFactory.getInstance();\nfinal IRI anne = vf.createIRI(\"https://example.com/anne\");\nnpCreator.addAssertionStatement(anne, RDF.TYPE, vf.createIRI(\"https://schema.org/Person\"));\nnpCreator.addProvenanceStatement(PROV.WAS_ATTRIBUTED_TO, anne);\nnpCreator.addPubinfoStatement(RDF.TYPE, vf.createIRI(\"http://purl.org/nanopub/x/ExampleNanopub\"));\nNanopub np = npCreator.finalizeNanopub(true);\n</code></pre>"},{"location":"quick-start/java/#sign-a-nanopublication","title":"Sign a Nanopublication","text":"<p>Prerequisite for signing/publishing</p> <p>Before you can sign and publish you should setup your profile, check if it is properly set by running <code>np profile</code> in your terminal.</p> <pre><code>Nanopub signedNp = SignNanopub.signAndTransform(np, TransformContext.makeDefault());\n</code></pre>"},{"location":"quick-start/java/#publish-a-nanopublication","title":"Publish a Nanopublication","text":"<p>Prerequisite for creating/publishing</p> <p>To create and publish nanopublications, you need to first make sure you have a local keypair. To create such a keypair, run just once: <pre><code>MakeKeys.make(\"~/.nanopub/id\", SignatureAlgorithm.RSA);\n</code></pre></p>"},{"location":"quick-start/java/#publish-to-the-test-server","title":"Publish to the Test Server","text":"<pre><code>PublishNanopub.publishToTestServer(signedNp);\n</code></pre>"},{"location":"quick-start/java/#publish-to-the-production-server","title":"Publish to the Production Server","text":"<pre><code>PublishNanopub.publish(signedNp);\n</code></pre>"}]}